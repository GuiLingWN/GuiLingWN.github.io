(window.webpackJsonp=window.webpackJsonp||[]).push([[102],{424:function(a,t,s){"use strict";s.r(t);var e=s(27),r=Object(e.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"git常用操作技巧与命令备忘"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#git常用操作技巧与命令备忘"}},[a._v("#")]),a._v(" Git常用操作技巧与命令备忘")]),a._v(" "),t("p",[a._v("在日常开发中，Git 的一些不太常用但很实用的命令和技巧，往往容易被忘记。这里整理了一些我在实践中积累的 Git 操作笔记，供需要时快速查阅。")]),a._v(" "),t("h2",{attrs:{id:"合并本地分支"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#合并本地分支"}},[a._v("#")]),a._v(" 合并本地分支")]),a._v(" "),t("p",[a._v("将某个特性分支合并到当前分支：")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" merge feature-branch\n")])])]),t("h2",{attrs:{id:"忽略提交已受版本控制的文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#忽略提交已受版本控制的文件"}},[a._v("#")]),a._v(" 忽略提交已受版本控制的文件")]),a._v(" "),t("p",[a._v("有时候需要临时忽略某些已经被 Git 追踪的文件，但又不想删除它们，可以使用以下几种方法：")]),a._v(" "),t("h3",{attrs:{id:"假设未修改-推荐"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#假设未修改-推荐"}},[a._v("#")]),a._v(" 假设未修改（推荐）")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v('# 标记文件为"假设未修改"')]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" update-index --assume-unchanged "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("file"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 取消假设未修改")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" update-index --no-assume-unchanged "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("file"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v('# 查询所有"假设未修改"的文件')]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Linux/Mac:")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" ls-files "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-v")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("grep")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'^h'")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Windows:")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" ls-files "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-v")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" findstr "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"^h"')]),a._v("\n")])])]),t("h3",{attrs:{id:"停止追踪文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#停止追踪文件"}},[a._v("#")]),a._v(" 停止追踪文件")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v('# Git 会停止追踪该文件，下次提交时会显示为"被删除"')]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("rm")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--cached")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("file"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),t("h3",{attrs:{id:"使用-stash-临时隐藏更改"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用-stash-临时隐藏更改"}},[a._v("#")]),a._v(" 使用 stash（临时隐藏更改）")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" stash push "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("file"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" stash pop\n")])])]),t("p",[a._v("更多讨论可参考："),t("a",{attrs:{href:"https://chatgpt.com/share/01bc2cb4-9230-4c56-a556-aa4a341928e4",target:"_blank",rel:"noopener noreferrer"}},[a._v("ChatGPT 对话"),t("OutboundLink")],1)]),a._v(" "),t("h2",{attrs:{id:"本地-git-目录克隆"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#本地-git-目录克隆"}},[a._v("#")]),a._v(" 本地 Git 目录克隆")]),a._v(" "),t("p",[a._v("在本地磁盘之间克隆仓库：")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" clone d:/SourceRepository d:/DestinationRepository\n")])])]),t("p",[t("strong",[a._v("说明：")])]),a._v(" "),t("ul",[t("li",[t("code",[a._v("d:/SourceRepository")]),a._v(" 为源仓库路径")]),a._v(" "),t("li",[t("code",[a._v("d:/DestinationRepository")]),a._v(" 为目标路径（可选参数，默认为当前目录）")]),a._v(" "),t("li",[a._v("注意：目标目录不能已经存在，否则克隆会失败")])]),a._v(" "),t("h2",{attrs:{id:"远程仓库强制覆盖本地"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#远程仓库强制覆盖本地"}},[a._v("#")]),a._v(" 远程仓库强制覆盖本地")]),a._v(" "),t("p",[a._v("当本地代码出现问题，需要用远程分支完全覆盖本地时：")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" fetch "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--all")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" reset "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--hard")]),a._v(" origin/master  "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# master 改为对应的分支名")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" pull\n")])])]),t("p",[t("strong",[a._v("警告：")]),a._v(" 此操作会丢失所有本地未提交的更改，请谨慎使用！")]),a._v(" "),t("h2",{attrs:{id:"清空-git-缓存"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#清空-git-缓存"}},[a._v("#")]),a._v(" 清空 Git 缓存")]),a._v(" "),t("p",[a._v("当修改了 "),t("code",[a._v(".gitignore")]),a._v(" 文件后，需要清除缓存使其生效：")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("rm")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-r")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--cached")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("add")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v("\n")])])]),t("h2",{attrs:{id:"使用-bfg-清除已上传的敏感信息"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用-bfg-清除已上传的敏感信息"}},[a._v("#")]),a._v(" 使用 BFG 清除已上传的敏感信息")]),a._v(" "),t("p",[a._v("如果不小心将密码、密钥等敏感信息提交到了 GitHub，可以使用 BFG 工具清除历史记录。")]),a._v(" "),t("h3",{attrs:{id:"创建替换规则文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#创建替换规则文件"}},[a._v("#")]),a._v(" 创建替换规则文件")]),a._v(" "),t("p",[a._v("创建 "),t("code",[a._v("passwords.txt")]),a._v(" 文件，定义替换规则：")]),a._v(" "),t("div",{staticClass:"language-text extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("PASSWORD1                       # 替换为 '***REMOVED***'（默认）\nPASSWORD2==>examplePass         # 替换为 'examplePass'\nPASSWORD3==>                    # 替换为空字符串\nregex:password=\\w+==>password=  # 使用正则表达式替换\nregex:\\r(\\n)==>$1               # 将 Windows 换行符替换为 Unix 换行符\n")])])]),t("h3",{attrs:{id:"执行清理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#执行清理"}},[a._v("#")]),a._v(" 执行清理")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 镜像克隆仓库")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" clone "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--mirror")]),a._v(" https://github.com/用户名/仓库名.git\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 使用 BFG 工具替换敏感信息")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("java")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-jar")]),a._v(" bfg.jar --replace-text passwords.txt --no-blob-protection 仓库名.git\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 进入仓库目录并推送")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("cd")]),a._v(" 仓库名.git\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" push\n")])])]),t("p",[t("strong",[a._v("参考资料：")])]),a._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/297695945?utm_source=wechat_session",target:"_blank",rel:"noopener noreferrer"}},[a._v("使用 BFG 清理 Git 历史中的敏感数据"),t("OutboundLink")],1)])]),a._v(" "),t("h2",{attrs:{id:"小结"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#小结"}},[a._v("#")]),a._v(" 小结")]),a._v(" "),t("p",[a._v("这些命令和技巧在特定场景下非常实用。建议根据实际需求选择合适的方法，特别是涉及强制操作和敏感信息清理时，一定要谨慎操作并做好备份。")])])}),[],!1,null,null,null);t.default=r.exports}}]);