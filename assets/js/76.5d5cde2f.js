(window.webpackJsonp=window.webpackJsonp||[]).push([[76],{388:function(a,s,e){"use strict";e.r(s);var t=e(27),r=Object(t.a)({},(function(){var a=this,s=a._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"wireguard-配置与管理核心命令备忘"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#wireguard-配置与管理核心命令备忘"}},[a._v("#")]),a._v(" WireGuard 配置与管理核心命令备忘")]),a._v(" "),s("p",[a._v("WireGuard 以其简洁、高效和安全而备受青睐，已成为许多人替代传统 VPN 的首选。在配置和日常管理 WireGuard 的过程中，会涉及到一系列的命令，从生成密钥到管理服务，再到配置防火墙规则。为了方便查阅，我将这些核心操作整理成了一份备忘录。")]),a._v(" "),s("h2",{attrs:{id:"一、密钥生成"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一、密钥生成"}},[a._v("#")]),a._v(" 一、密钥生成")]),a._v(" "),s("p",[a._v("WireGuard 的安全基石在于其加密密钥对。每个参与通信的对等端（Peer）都需要有一对自己的公钥和私钥。")]),a._v(" "),s("ul",[s("li",[s("p",[s("strong",[a._v("生成单个密钥对")])]),a._v(" "),s("p",[a._v("这是一个非常实用的“一条龙”命令，它会生成一个私钥，并立即从中派生出对应的公钥。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 生成私钥并保存到 private.key，同时生成公钥并保存到 public.key")]),a._v("\nwg genkey "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("tee")]),a._v(" private.key "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" wg pubkey "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" public.key\n")])])])]),a._v(" "),s("li",[s("p",[s("strong",[a._v("批量生成密钥")])]),a._v(" "),s("p",[a._v("如果你需要为多个客户端设备生成密钥，可以像下面这样操作：")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 1. 生成服务器的密钥对")]),a._v("\nwg genkey "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" server.key\nwg pubkey "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v(" server.key "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" server.key.pub\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 2. 为 iPhone 生成密钥对")]),a._v("\nwg genkey "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" iphone.key\nwg pubkey "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v(" iphone.key "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" iphone.key.pub\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 3. 为 MacBook 生成密钥对")]),a._v("\nwg genkey "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" macos.key\nwg pubkey "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v(" macos.key "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" macos.key.pub\n")])])])]),a._v(" "),s("li",[s("p",[s("strong",[a._v("生成预共享密钥 (Preshared Key)")])]),a._v(" "),s("p",[a._v("为了增加一层额外的安全保障（抵御量子计算攻击），可以在对等端之间配置一个预共享密钥。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("wg genpsk "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" preshared.key\n")])])]),s("p",[a._v("这个生成的密钥需要在服务器和客户端的 "),s("code",[a._v("[Peer]")]),a._v(" 配置块中同时指定。")])])]),a._v(" "),s("h2",{attrs:{id:"二、服务管理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二、服务管理"}},[a._v("#")]),a._v(" 二、服务管理")]),a._v(" "),s("p",[a._v("管理 WireGuard 接口通常有两种方式：使用 "),s("code",[a._v("wg-quick")]),a._v(" 脚本或 "),s("code",[a._v("systemd")]),a._v(" 服务。")]),a._v(" "),s("h3",{attrs:{id:"使用-wg-quick"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用-wg-quick"}},[a._v("#")]),a._v(" 使用 "),s("code",[a._v("wg-quick")])]),a._v(" "),s("p",[s("code",[a._v("wg-quick")]),a._v(" 是一个便捷的脚本，它可以根据 "),s("code",[a._v("/etc/wireguard/")]),a._v(" 目录下的配置文件（如 "),s("code",[a._v("wg0.conf")]),a._v("）来快速启动或关闭一个 WireGuard 接口。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 启动名为 wg0 的接口")]),a._v("\nwg-quick up wg0\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 关闭名为 wg0 的接口")]),a._v("\nwg-quick down wg0\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 查看当前所有 WireGuard 接口的状态（包括连接信息）")]),a._v("\nwg show\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 或者直接用 wg 命令")]),a._v("\nwg\n")])])]),s("h3",{attrs:{id:"使用-systemd"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用-systemd"}},[a._v("#")]),a._v(" 使用 "),s("code",[a._v("systemd")])]),a._v(" "),s("p",[a._v("为了让 WireGuard 能开机自启，最好将其作为 "),s("code",[a._v("systemd")]),a._v(" 服务来管理。")]),a._v(" "),s("p",[s("code",[a._v("wg-quick")]),a._v(" 工具已经为我们准备好了 "),s("code",[a._v("systemd")]),a._v(" 的服务单元模板 "),s("code",[a._v("wg-quick@.service")]),a._v("。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 启动 wg0 接口")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" systemctl start wg-quick@wg0\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 停止 wg0 接口")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" systemctl stop wg-quick@wg0\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 重启 wg0 接口")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" systemctl restart wg-quick@wg0\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 开机自启 wg0 接口")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" systemctl "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("enable")]),a._v(" wg-quick@wg0\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 查看服务状态")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" systemctl status wg-quick@wg0\n")])])]),s("h2",{attrs:{id:"三、防火墙与路由-iptables"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三、防火墙与路由-iptables"}},[a._v("#")]),a._v(" 三、防火墙与路由 (iptables)")]),a._v(" "),s("p",[a._v("要让 WireGuard 客户端能够通过服务器访问外部网络，关键在于配置正确的 "),s("code",[a._v("iptables")]),a._v(" 规则来实现网络地址转换（NAT）和数据包转发。")]),a._v(" "),s("p",[a._v("假设：")]),a._v(" "),s("ul",[s("li",[a._v("WireGuard 接口名为 "),s("code",[a._v("wg0")]),a._v("。")]),a._v(" "),s("li",[a._v("服务器的公网网卡接口名为 "),s("code",[a._v("ens18")]),a._v("。")]),a._v(" "),s("li",[a._v("WireGuard 的子网是 "),s("code",[a._v("10.0.8.0/24")]),a._v("。")])]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 1. 允许 FORWARD 链接受来自和去往 wg0 接口的数据包")]),a._v("\niptables "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-A")]),a._v(" FORWARD "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-i")]),a._v(" wg0 "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-j")]),a._v(" ACCEPT\niptables "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-A")]),a._v(" FORWARD "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-o")]),a._v(" wg0 "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-j")]),a._v(" ACCEPT\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 2. 在 POSTROUTING 链上，将源地址为 wg0 子网的数据包进行 SNAT (源地址转换)，")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#    伪装成从公网网卡 ens18 出去的样子")]),a._v("\niptables "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-t")]),a._v(" nat "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-A")]),a._v(" POSTROUTING "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-o")]),a._v(" ens18 "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-j")]),a._v(" MASQUERADE\n")])])]),s("p",[s("strong",[a._v("重要提示")]),a._v("：这些规则在系统重启后会丢失。你需要使用 "),s("code",[a._v("iptables-persistent")]),a._v(" 之类的工具来持久化这些规则。")]),a._v(" "),s("p",[a._v("同时，别忘了在 "),s("code",[a._v("INPUT")]),a._v(" 链上放行 WireGuard 的监听端口（默认为 UDP 51820）：")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("iptables "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-A")]),a._v(" INPUT "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-p")]),a._v(" udp "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--dport")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("51820")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-j")]),a._v(" ACCEPT\niptables-save\n")])])]),s("h2",{attrs:{id:"四、使用-docker-和-wg-easy-带-web-ui"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#四、使用-docker-和-wg-easy-带-web-ui"}},[a._v("#")]),a._v(" 四、使用 Docker 和 "),s("code",[a._v("wg-easy")]),a._v(" (带 Web UI)")]),a._v(" "),s("p",[a._v("对于不喜欢直接在宿主机上配置和管理的用户，"),s("code",[a._v("wg-easy")]),a._v(" 是一个非常棒的 Docker 项目。它提供了一个简单的 Web UI 来管理客户端，大大降低了使用门槛。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" run "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-d")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("wg-easy "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-e")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("WG_HOST")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("你的服务器公网IP "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-e")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("PASSWORD")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("你的UI登录密码 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-v")]),a._v(" /path/to/your/config:/etc/wireguard "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-p")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("51820")]),a._v(":51820/udp "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-p")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("51821")]),a._v(":51821/tcp "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  --cap-add"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("NET_ADMIN "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  --cap-add"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("SYS_MODULE "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--sysctl")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"net.ipv4.conf.all.src_valid_mark=1"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--sysctl")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"net.ipv4.ip_forward=1"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--restart")]),a._v(" unless-stopped "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  weejewel/wg-easy\n")])])]),s("ul",[s("li",[s("strong",[s("code",[a._v("WG_HOST")])]),a._v(": 必须设置为你的服务器的公网 IP 或域名。")]),a._v(" "),s("li",[s("strong",[s("code",[a._v("PASSWORD")])]),a._v(": 用于登录 Web UI 的密码。")]),a._v(" "),s("li",[s("strong",[s("code",[a._v("-v /path/to/your/config:/etc/wireguard")])]),a._v(": 将 WireGuard 的配置持久化到宿主机，防止容器销毁后配置丢失。")])]),a._v(" "),s("p",[a._v("启动后，访问 "),s("code",[a._v("http://你的服务器IP:51821")]),a._v(" 即可进入管理界面。")]),a._v(" "),s("p",[a._v("希望这份备忘能帮助你更轻松地驾驭 WireGuard！")])])}),[],!1,null,null,null);s.default=r.exports}}]);