(window.webpackJsonp=window.webpackJsonp||[]).push([[81],{394:function(s,a,t){"use strict";t.r(a);var n=t(27),e=Object(n.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"mysql-安装配置与常用技巧"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mysql-安装配置与常用技巧"}},[s._v("#")]),s._v(" MySQL 安装配置与常用技巧")]),s._v(" "),a("p",[s._v("MySQL 是最流行的开源关系型数据库管理系统之一。本文将介绍在 Debian 系统上安装 MySQL 的方法，以及时区修改等常用配置技巧。")]),s._v(" "),a("h2",{attrs:{id:"debian-系统安装-mysql"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#debian-系统安装-mysql"}},[s._v("#")]),s._v(" Debian 系统安装 MySQL")]),s._v(" "),a("p",[s._v("在 Debian 系统上安装 MySQL，可以参考相关教程进行操作。")]),s._v(" "),a("p",[s._v("安装完成后，需要根据具体需求进行配置和优化。")]),s._v(" "),a("h2",{attrs:{id:"时区配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#时区配置"}},[s._v("#")]),s._v(" 时区配置")]),s._v(" "),a("p",[s._v("MySQL 时区设置对于确保时间数据的准确性非常重要。")]),s._v(" "),a("h3",{attrs:{id:"修改-mysql-时区"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#修改-mysql-时区"}},[s._v("#")]),s._v(" 修改 MySQL 时区")]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 设置当前会话时区")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SET")]),s._v(" time_zone "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'+8:00'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 设置全局时区")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SET")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("GLOBAL")]),s._v(" time_zone "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'+08:00'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 刷新权限使设置生效")]),s._v("\nFLUSH "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("PRIVILEGES")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),a("h3",{attrs:{id:"查看当前时区设置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查看当前时区设置"}},[s._v("#")]),s._v(" 查看当前时区设置")]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 查看当前会话时区")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" @"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("@session.time_zone")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 查看全局时区")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" @"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("@global.time_zone")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),a("h2",{attrs:{id:"同时返回查询总数及分页数据"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#同时返回查询总数及分页数据"}},[s._v("#")]),s._v(" 同时返回查询总数及分页数据")]),s._v(" "),a("p",[s._v("在分页查询中，通常需要同时获取数据和总记录数。MySQL 提供了 "),a("code",[s._v("SQL_CALC_FOUND_ROWS")]),s._v(" 和 "),a("code",[s._v("FOUND_ROWS()")]),s._v(" 函数来实现这一功能。")]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 查询数据并计算总行数")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" SQL_CALC_FOUND_ROWS "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" sys_user "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("LIMIT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 获取上一次查询的总行数")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" FOUND_ROWS"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),a("p",[s._v("这种方式可以在一次查询中同时获取分页数据和总记录数，避免了分别执行两次查询。")]),s._v(" "),a("h2",{attrs:{id:"sql-分组筛选前-n-条记录"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sql-分组筛选前-n-条记录"}},[s._v("#")]),s._v(" SQL 分组筛选前 N 条记录")]),s._v(" "),a("p",[s._v("在实际业务中，经常需要查询每个分组的前 N 条记录，比如每个分类的前 3 个热门商品。")]),s._v(" "),a("h3",{attrs:{id:"实现思路"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实现思路"}},[s._v("#")]),s._v(" 实现思路")]),s._v(" "),a("p",[s._v("主要思路是：")]),s._v(" "),a("ol",[a("li",[s._v("一张表查询两次")]),s._v(" "),a("li",[s._v("子查询用于筛选当前记录在该组中是第几个（用序号字段区分）")]),s._v(" "),a("li",[s._v("主查询获取数据并排序")])]),s._v(" "),a("h3",{attrs:{id:"示例代码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#示例代码"}},[s._v("#")]),s._v(" 示例代码")]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v("\n    title"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    exam_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    category"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    priority_lev\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v("\n    b_exam a\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("COUNT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v("\n            b_exam b\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v("\n            a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("category "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("category\n        "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("AND")]),s._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("no")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),s._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("no")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ORDER")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("BY")]),s._v("\n    category"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    priority_lev "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DESC")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),a("h2",{attrs:{id:"创建函数时的常见错误解决"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建函数时的常见错误解决"}},[s._v("#")]),s._v(" 创建函数时的常见错误解决")]),s._v(" "),a("p",[s._v("在 MySQL 中创建自定义函数时，可能会遇到以下错误：")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("This function has none of DETERMINISTIC, NO SQL, or READS SQL DATA in its definition\n")])])]),a("h3",{attrs:{id:"解决方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解决方法"}},[s._v("#")]),s._v(" 解决方法")]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 设置允许创建函数")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SET")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("GLOBAL")]),s._v(" log_bin_trust_function_creators "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("TRUE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),a("p",[s._v("设置后即可正常创建自定义函数。")]),s._v(" "),a("h2",{attrs:{id:"join-查询基础"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#join-查询基础"}},[s._v("#")]),s._v(" JOIN 查询基础")]),s._v(" "),a("p",[s._v("SQL JOIN 是用于根据两个或多个表中的列之间的关系，从这些表中查询数据的常用方法。")]),s._v(" "),a("p",[s._v("常见的 JOIN 类型包括：")]),s._v(" "),a("ul",[a("li",[s._v("INNER JOIN：内连接，返回两个表中匹配的记录")]),s._v(" "),a("li",[s._v("LEFT JOIN：左连接，返回左表中的所有记录和右表中匹配的记录")]),s._v(" "),a("li",[s._v("RIGHT JOIN：右连接，返回右表中的所有记录和左表中匹配的记录")]),s._v(" "),a("li",[s._v("FULL OUTER JOIN：全外连接，返回两个表中的所有记录")])]),s._v(" "),a("p",[s._v("通过合理使用 JOIN 操作，可以高效地查询关联表中的数据。")]),s._v(" "),a("h2",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[s._v("#")]),s._v(" 总结")]),s._v(" "),a("p",[s._v("掌握 MySQL 的安装配置和常用技巧对于数据库管理和应用开发非常重要。在实际使用中，应根据具体需求选择合适的配置和查询方法，并注意时区等细节设置，以确保数据的准确性和一致性。")])])}),[],!1,null,null,null);a.default=e.exports}}]);