(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{363:function(_,s,v){"use strict";v.r(s);var t=v(27),e=Object(t.a)({},(function(){var _=this,s=_._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[s("h1",{attrs:{id:"windows-下-openssh-server-的免密登录精细化配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#windows-下-openssh-server-的免密登录精细化配置"}},[_._v("#")]),_._v(" Windows 下 OpenSSH Server 的免密登录精细化配置")]),_._v(" "),s("p",[_._v("在使用 Windows 作为服务器并开启 OpenSSH 服务时，我们通常希望能够像在 Linux 上一样，通过公钥实现免密登录。标准的做法是将客户端的公-钥（如 "),s("code",[_._v("id_rsa.pub")]),_._v("）内容追加到服务器上用户目录下的 "),s("code",[_._v("~/.ssh/authorized_keys")]),_._v(" 文件中。")]),_._v(" "),s("p",[_._v("然而，在 Windows 环境下，特别是涉及到管理员账户时，OpenSSH 提供了一种更集中、更安全的管理方式。本文将介绍如何通过修改 "),s("code",[_._v("sshd_config")]),_._v(" 文件，为管理员组（"),s("code",[_._v("administrators")]),_._v("）配置一个统一的公钥认证文件，从而实现更精细化的权限控制。")]),_._v(" "),s("h2",{attrs:{id:"默认公钥认证方式的问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#默认公钥认证方式的问题"}},[_._v("#")]),_._v(" 默认公钥认证方式的问题")]),_._v(" "),s("p",[_._v("默认情况下，每个用户的公钥都存放在其个人目录下（"),s("code",[_._v("C:\\Users\\YourUser\\.ssh\\authorized_keys")]),_._v("）。这种方式对于普通用户来说没有问题，但对于管理员账户，存在一些潜在的管理不便：")]),_._v(" "),s("ol",[s("li",[s("strong",[_._v("分散管理")]),_._v("：如果有多位管理员，或需要频繁更换密钥，就需要在多个用户的个人目录下维护 "),s("code",[_._v("authorized_keys")]),_._v(" 文件。")]),_._v(" "),s("li",[s("strong",[_._v("权限继承问题")]),_._v("：当一个普通用户被提升为管理员后，其个人的 "),s("code",[_._v("authorized_keys")]),_._v(" 文件依然生效，这可能不符合某些安全策略。")])]),_._v(" "),s("h2",{attrs:{id:"统一管理员公钥配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#统一管理员公钥配置"}},[_._v("#")]),_._v(" 统一管理员公钥配置")]),_._v(" "),s("p",[_._v("为了解决以上问题，我们可以利用 OpenSSH Server 的 "),s("code",[_._v("Match")]),_._v(" 指令，为特定用户组指定一个专属的公钥文件。对于 Windows 来说，内置的 "),s("code",[_._v("administrators")]),_._v(" 组是理想的目标。")]),_._v(" "),s("h3",{attrs:{id:"配置步骤"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置步骤"}},[_._v("#")]),_._v(" 配置步骤")]),_._v(" "),s("ol",[s("li",[s("p",[s("strong",[_._v("找到并编辑 "),s("code",[_._v("sshd_config")]),_._v(" 文件")])]),_._v(" "),s("p",[_._v("该文件通常位于 OpenSSH 的安装目录下，默认路径是 "),s("code",[_._v("C:\\ProgramData\\ssh\\sshd_config")]),_._v("。你需要用管理员权限的文本编辑器（如 Notepad++ 以管理员模式运行）来打开它。")])]),_._v(" "),s("li",[s("p",[s("strong",[_._v("添加 "),s("code",[_._v("Match")]),_._v(" 配置块")])]),_._v(" "),s("p",[_._v("在 "),s("code",[_._v("sshd_config")]),_._v(" 文件的末尾，添加以下内容：")]),_._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[_._v("# 为管理员组指定一个专属的公钥文件\nMatch Group administrators\n    AuthorizedKeysFile __PROGRAMDATA__/ssh/administrators_authorized_keys\n")])])])])]),_._v(" "),s("h3",{attrs:{id:"配置解析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置解析"}},[_._v("#")]),_._v(" 配置解析")]),_._v(" "),s("ul",[s("li",[s("p",[s("strong",[s("code",[_._v("Match Group administrators")])]),_._v(": 这是一个条件匹配块。它告诉 SSHD (SSH Daemon)，当尝试登录的用户属于 "),s("code",[_._v("administrators")]),_._v(" 这个用户组时，就应用这个块内部的配置。")])]),_._v(" "),s("li",[s("p",[s("strong",[s("code",[_._v("AuthorizedKeysFile __PROGRAMDATA__/ssh/administrators_authorized_keys")])]),_._v(": 这行是核心配置。它覆盖了默认的 "),s("code",[_._v("authorized_keys")]),_._v(" 文件路径。")]),_._v(" "),s("ul",[s("li",[s("code",[_._v("AuthorizedKeysFile")]),_._v("：指定了用于公钥认证的文件路径。")]),_._v(" "),s("li",[s("code",[_._v("__PROGRAMDATA__")]),_._v("：这是一个 OpenSSH 在 Windows 上特有的变量，它会自动解析为 "),s("code",[_._v("C:\\ProgramData")]),_._v(" 目录。这样做的好处是，即使 OpenSSH 的安装路径改变，配置也依然有效。")]),_._v(" "),s("li",[_._v("因此，这整行配置的含义是：对于管理员组的用户，SSH 服务器将使用 "),s("code",[_._v("C:\\ProgramData\\ssh\\administrators_authorized_keys")]),_._v(" 这个文件来进行公钥验证。")])])])]),_._v(" "),s("ol",{attrs:{start:"3"}},[s("li",[s("p",[s("strong",[_._v("创建并配置 "),s("code",[_._v("administrators_authorized_keys")]),_._v(" 文件")])]),_._v(" "),s("p",[_._v("在 "),s("code",[_._v("C:\\ProgramData\\ssh\\")]),_._v(" 目录下，创建一个名为 "),s("code",[_._v("administrators_authorized_keys")]),_._v(" 的文件。然后，将所有"),s("strong",[_._v("允许以管理员身份登录")]),_._v("的客户端的"),s("strong",[_._v("公钥")]),_._v("（"),s("code",[_._v("id_rsa.pub")]),_._v(" 或其他公钥文件的内容）逐行粘贴到这个文件中。")])]),_._v(" "),s("li",[s("p",[s("strong",[_._v("重启 OpenSSH 服务")])]),_._v(" "),s("p",[_._v("修改配置后，必须重启服务才能生效。打开“服务”(Services) 应用，找到 "),s("code",[_._v("OpenSSH SSH Server")]),_._v(" 服务，右键点击并选择“重新启动”。")])])]),_._v(" "),s("h2",{attrs:{id:"配置生效后的优先级"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置生效后的优先级"}},[_._v("#")]),_._v(" 配置生效后的优先级")]),_._v(" "),s("p",[_._v("完成以上配置后，SSH 登录的认证逻辑会发生改变：")]),_._v(" "),s("ul",[s("li",[_._v("当一个"),s("strong",[_._v("管理员用户")]),_._v("尝试登录时，SSH 服务器会"),s("strong",[_._v("仅检查")]),_._v(" "),s("code",[_._v("C:\\ProgramData\\ssh\\administrators_authorized_keys")]),_._v(" 文件。此时，该用户个人目录下的 "),s("code",[_._v("~/.ssh/authorized_keys")]),_._v(" 文件将被"),s("strong",[_._v("完全忽略")]),_._v("。")]),_._v(" "),s("li",[_._v("当一个"),s("strong",[_._v("非管理员用户")]),_._v("尝试登录时，SSH 服务器依然会沿用默认行为，检查其个人目录下的 "),s("code",[_._v("~/.ssh/authorized_keys")]),_._v(" 文件。")])]),_._v(" "),s("h2",{attrs:{id:"总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[_._v("#")]),_._v(" 总结")]),_._v(" "),s("p",[_._v("通过为 "),s("code",[_._v("administrators")]),_._v(" 组设置一个统一的 "),s("code",[_._v("AuthorizedKeysFile")]),_._v("，我们实现了对管理员 SSH 访问权限的集中化管理。所有管理员的公钥都存放在一个受控的位置，这不仅简化了密钥的轮换和审计工作，也极大地提升了系统的安全性，确保了只有经过明确授权的公钥才能获得管理员权限。这对于维护一个安全、规范的 Windows 服务器环境来说，是一个非常值得推荐的最佳实践。")])])}),[],!1,null,null,null);s.default=e.exports}}]);